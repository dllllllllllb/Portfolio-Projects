//Author: Maciej Dowbor
//Module: MED5149
//Date last accessed: 20/01/2021

#ifndef ENEMY_H
#define ENEMY_H

#include <math.h>

#include "BulletPool.h"
#include "EnemyStateEnum.h"
#include "EnemyType.h"
#include "Object.h"
#include "Textures.h"
#include "Settings.h"


//=====================================================================================================	
//Class		: Enemy
//-----------------------------------------------------------------------------------------------------
//Purpose	: Enemy object
//=====================================================================================================
class Enemy : public Object
{
private:
	sf::Vector2f	m_startPosition;
	EnemyType       m_type;
	EnemyState		m_behaviourState;
	float			m_idleAnimationCounter;
	float			m_idleAnimationSpeed;
	int				m_idleAnimationYCoefficient;
	float			m_shootingTimer;
	float           m_idleAnimationErrorAllowance;
	int				m_health;
	int				m_rateOfFire;
	float			m_speed;
	int				m_numOfBehaviours;
	int				*m_pBehaviourChances;
	int				m_behaviourChancesTotal;
	bool			m_isDisplacedByIdleAnimation;
	float			m_windowBorderX;
	bool			m_isInStartPosition;
	bool			m_gotHit;

public:
	Enemy( );
	//=================================================================================================						
	//Purpose	: Constructor
	//-------------------------------------------------------------------------------------------------
	//Parameters: -
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================

	~Enemy( );
	//=================================================================================================						
	//Purpose	: Destructor
	//-------------------------------------------------------------------------------------------------
	//Parameters: -
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================

	void update( const float &deltaTime, const sf::Vector2f &playerPosition );
	//=================================================================================================						
	//Purpose	: Update enemy behaviour based on their state
	//-------------------------------------------------------------------------------------------------
	//Parameters: Time passed since last frame and player position as vector2
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================

	void dive( const float &deltaTime );
	//=================================================================================================						
	//Purpose	: Dive maneuver
	//-------------------------------------------------------------------------------------------------
	//Parameters: Time passed since last frame
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================

	void resetPosition( const float &deltaTime );
	//=================================================================================================						
	//Purpose	: Returns enemy to their spawn position
	//-------------------------------------------------------------------------------------------------
	//Parameters: Time passed since last frame
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================

	void shoot( const float &time, BulletPool *pBulletPool );
	//=================================================================================================						
	//Purpose	: Shoot a bullet
	//-------------------------------------------------------------------------------------------------
	//Parameters: Time passed since last frame and pointer to a bullet pool
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================

	const EnemyState &getBehaviourState( ) const;
	//=================================================================================================						
	//Purpose	: Return enemy behaviour state enum
	//-------------------------------------------------------------------------------------------------
	//Parameters: -
	//-------------------------------------------------------------------------------------------------
	//Returns	: Enemy behaviour state enum
	//=================================================================================================

	const EnemyType &getEnemyType( ) const;
	//=================================================================================================						
	//Purpose	: Return enemy type
	//-------------------------------------------------------------------------------------------------
	//Parameters: -
	//-------------------------------------------------------------------------------------------------
	//Returns	: Enemy type enum
	//=================================================================================================

	void idleAnimation( const float &deltaTime );
	//=================================================================================================						
	//Purpose	: To animate enemies when they're idle
	//-------------------------------------------------------------------------------------------------
	//Parameters: Time passed sine last frame
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================

	void setType( const EnemyType &enemyType );
	//=================================================================================================						
	//Purpose	: Sets enemy type and its values
	//-------------------------------------------------------------------------------------------------
	//Parameters: Enemy type enum
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================

	void choseBehaviour( );
	//=================================================================================================						
	//Purpose	: Determines enemy behaviour
	//-------------------------------------------------------------------------------------------------
	//Parameters: -
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================

	void calcTotalBehaviourChance( );
	//=================================================================================================						
	//Purpose	: Calculates chances to avtivate behaviours 
	//-------------------------------------------------------------------------------------------------
	//Parameters: -
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================

	void setStartPosition( const sf::Vector2f &position );
	//=================================================================================================						
	//Purpose	: Set enemy start position
	//-------------------------------------------------------------------------------------------------
	//Parameters: Start position as vector2
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================

	void initialManeuver( const float &deltaTime );
	//=================================================================================================						
	//Purpose	: Moves enemies to the bottom of the screen 
	//-------------------------------------------------------------------------------------------------
	//Parameters: Time passed since last frame
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================

	void moveRight( const float &deltaTime );
	//=================================================================================================						
	//Purpose	: Moves the enemy to the right
	//-------------------------------------------------------------------------------------------------
	//Parameters: Time passed since last frame
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================

	void setEnemyBehaviour( const EnemyState &enemyBehaviour );
	//=================================================================================================						
	//Purpose	: Sets enemy behaviour state
	//-------------------------------------------------------------------------------------------------
	//Parameters: Enemy behaviour state as enum
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================

	void kamikazeManeuver( const float &deltaTime, const sf::Vector2f &playerPosition );
	//=================================================================================================						
	//Purpose	: Fly into the player
	//-------------------------------------------------------------------------------------------------
	//Parameters: Time passed since last frame and player position as vector2
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================

	const int &getHealth( ) const;
	//=================================================================================================						
	//Purpose	: Returns current health
	//-------------------------------------------------------------------------------------------------
	//Parameters: -
	//-------------------------------------------------------------------------------------------------
	//Returns	: Current health
	//=================================================================================================

	const bool takeDamage( );
	//=================================================================================================						
	//Purpose	: Deals damage to the enemy
	//-------------------------------------------------------------------------------------------------
	//Parameters: -
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================

	void gotHit( const float &deltaTime );
	//=================================================================================================						
	//Purpose	: Damage indicator (player feedback). Temporarily changes enemy colour to red
	//-------------------------------------------------------------------------------------------------
	//Parameters: Time passed since last frame
	//-------------------------------------------------------------------------------------------------
	//Returns	: -
	//=================================================================================================
};

#endif // !ENEMY_H
